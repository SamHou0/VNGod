<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GameDtails" xml:space="preserve">
    <value>游戏详细信息</value>
  </data>
  <data name="NoBgmID" xml:space="preserve">
    <value>该游戏没有 Bangumi ID。</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>信息：</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>哦我的上帝，欢迎来到 VNGod！看起来您是第一次启动游戏。一旦启动，主窗口会自动隐藏，直到那个游戏退出。如果程序表现异常，那么请您在“编辑信息”中调整一下进程名称。</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称：</value>
  </data>
  <data name="ExecutableName" xml:space="preserve">
    <value>可执行文件名称：</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>【未设定】</value>
  </data>
  <data name="SavePath" xml:space="preserve">
    <value>存档路径：</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>进程名称：</value>
  </data>
  <data name="PlayTime" xml:space="preserve">
    <value>游玩时长：</value>
  </data>
  <data name="DirectoryName" xml:space="preserve">
    <value>目录名称：</value>
  </data>
  <data name="GlobalOptions" xml:space="preserve">
    <value>全局选项</value>
  </data>
  <data name="RescanGames" xml:space="preserve">
    <value>重新扫描游戏</value>
  </data>
  <data name="RefreshInfo" xml:space="preserve">
    <value>获取未知信息</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="OpenRepo" xml:space="preserve">
    <value>打开存储库</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>玩</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="EditInfo" xml:space="preserve">
    <value>修改游戏信息</value>
  </data>
  <data name="Sync" xml:space="preserve">
    <value>同步</value>
  </data>
  <data name="GameOptions" xml:space="preserve">
    <value>游戏选项</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="VNDB" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="VNDBID" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="GetInfo" xml:space="preserve">
    <value>获取信息</value>
  </data>
  <data name="SelectProcessTip" xml:space="preserve">
    <value>单击以选择一个可执行文件。这只需执行一次。</value>
  </data>
  <data name="WebDAVConfig" xml:space="preserve">
    <value>WebDAV 配置</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>用户名：</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密码：</value>
  </data>
  <data name="VNDBToken" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>认证</value>
  </data>
  <data name="NoSavePath" xml:space="preserve">
    <value>未设定存档路径！</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>【未知】 </value>
  </data>
</root>